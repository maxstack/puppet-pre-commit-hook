#!/bin/bash
# pre-commit git hook to check the validity of a puppet manifest
#
# Prerequisites:
#   gem install puppet-lint puppet
#
# Install:
#  /path/to/repo/.git/hooks/pre-commit
#
# Original:
#  blog: http://techblog.roethof.net/puppet/a-puppet-git-pre-commit-hook-is-always-easy-to-have/
#
# Authors:
#  Ronny Roethof
#  Mattias Geniar <m@ttias.be>
#  Rob Nelson <rnelson0@gmail.com>
#  Jake Rogers <code@supportoss.org>

# set colors
c_fail='1'  # red
c_pass='2'  # green

function header() { tput bold; echo -e "\n${1}"; tput sgr0; }
function fail() { tput setaf $c_fail; echo -ne "${1}"; tput sgr0; }
function pass() { tput setaf $c_pass; echo -ne "${1}"; tput sgr0; }

function setup_paths() {
  # Make sure the necessary tools are installed. If they aren't, just die and
  # stop the commit. Force the use of these tools before a commit is allowed.

  # If neither the PDK or bundler are available, rely on actual binaries for Windows
  if [ "$OS" = "Windows_NT" ]; then
    path_to_puppet="puppet.bat"
  fi
}

setup_paths

if [[ $(git diff --name-only --cached | grep -E '\.(pp)') ]]; then
  header "*** Checking puppet manifest syntax ***"
  # validating the whole manifest takes too long. uncomment this
  # if you want to test the whole shebang.
  # for file in $(find . -name "*.pp")
  # for file in $(git diff --name-only --cached | grep -E '\.(pp|erb)')
  for file in $(git diff --name-only --cached | grep -E '\.(pp)'); do
    if [[ -f $file && $file == *.pp ]]; then
      $path_to_puppet parser validate $file
      if [[ $? -ne 0 ]]; then
        fail "FAILED: "; echo "$file"
        syntax_is_bad=1
      else
        pass "PASSED: "; echo "$file"
      fi
    fi
  done
fi

if [[ ! -z $(git diff --name-only --cached | grep -E manifests/site.pp) ]]; then
  echo "*** Checking if the catalog compiles ***"
  $path_to_puppet apply --noop manifests/site.pp
  if [[ $? -ne 0 ]]; then
    fail "FAILED: "; echo "catalog compilation"
    syntax_is_bad=1
  else
    pass "PASSED: "; echo "catalog compilation"
  fi
fi

if [[ $(git diff --name-only --cached | grep -E '\.(epp)') ]]; then
  header "*** Checking puppet template(epp) syntax ***"
  for file in $(git diff --name-only --cached | grep -E '\.(epp)'); do
    if [[ -f $file && $file == *.epp ]]; then
      $path_to_puppet epp validate $file
      if [[ $? -ne 0 ]]; then
        fail "FAILED: "; echo "$file"
        syntax_is_bad=1
      else
        pass "PASSED: "; echo "$file"
      fi
    fi
  done
fi

if [[ $syntax_is_bad -eq 1 ]]; then
  fail "\nErrors Found, Commit REJECTED\n"
  exit 1
else
  pass "\nNo Errors Found, Commit ACCEPTED\n"
fi
